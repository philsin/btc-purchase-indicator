name: build-pages

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  schedule:
    - cron: "0 */6 * * *"  # every 6h

concurrency:
  group: "pages"
  cancel-in-progress: true

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements-pages.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install deps
        run: pip install -r requirements-pages.txt

      # Tell Pages about this build (sets metadata)
      - name: Configure Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build static site
        run: |
          rm -rf dist
          python build_static.py

      - name: Verify artifact
        run: |
          test -f dist/index.html || (echo "dist/index.html missing" && exit 1)

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      # ðŸš« NEW: proactively cancel any in-progress Pages deployments
      - name: Cancel in-progress Pages deployments (best-effort)
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ github.token }}
        run: |
          set -e
          sudo apt-get update -y >/dev/null 2>&1 || true
          sudo apt-get install -y jq >/dev/null 2>&1 || true
          api() { curl -fsSL -H "Authorization: Bearer $GH_TOKEN" -H "Accept: application/vnd.github+json" "https://api.github.com$1"; }
          # List Pages deployments and cancel those still in_progress
          ids=$(api "/repos/$GH_REPO/pages/deployments" | jq -r '.[] | select(.status=="in_progress") | .id')
          for id in $ids; do
            echo "Canceling pages deployment id=$id"
            curl -fsSL -X POST \
              -H "Authorization: Bearer $GH_TOKEN" \
              -H "Accept: application/vnd.github+json" \
              "https://api.github.com/repos/$GH_REPO/pages/deployments/$id/cancel" || true
          done

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
