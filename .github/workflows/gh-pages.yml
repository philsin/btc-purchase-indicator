name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]          # ← change if your default branch is not "main"
  workflow_dispatch:             # allow manual runs from the Actions tab

# Prevent overlapping/queued Pages deploys. New runs cancel older ones.
concurrency:
  group: "github-pages"
  cancel-in-progress: true

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install deps
        if: hashFiles('requirements*.txt') != ''
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true
          if [ -f requirements-pages.txt ]; then pip install -r requirements-pages.txt; fi

      - name: Build static site
        run: |
          python build_static.py
          # Ensure output directory exists even on partial/no-op builds
          mkdir -p build

      # Optional but recommended: sets Pages config (CNAME, etc.)
      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # >>> IMPORTANT: this must match your build output folder <<<
          path: build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
